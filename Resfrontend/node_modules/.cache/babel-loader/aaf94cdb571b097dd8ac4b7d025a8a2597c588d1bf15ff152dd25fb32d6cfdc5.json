{"ast":null,"code":"// /* eslint-disable import/no-anonymous-default-export */\n// import React, { useState } from \"react\";\n// //import { useHistory } from \"react-router-dom\";\n\n// export default () => {\n//   //const history = useHistory();\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isValidEmail, setIsValidEmail] = useState(true);\n//   const [isValidPassword, setIsValidPassword] = useState(true);\n//   const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n//   const handleNameChange = (e) => setName(e.target.value);\n//   const handleEmailChange = (e) => setEmail(e.target.value);\n//   const handlePasswordChange = (e) => {\n//     const newPassword = e.target.value;\n//     setPassword(newPassword);\n\n//     // Password validation: At least one letter and one number\n//     const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\n//     setIsValidPassword(passwordRegex.test(newPassword));\n//   };\n//   const showSnackbar = (message) => {\n//     setSnackbarMessage(message);\n//     setTimeout(() => {\n//       setSnackbarMessage(\"\");\n//       // Redirect to the login page after 3 seconds\n//       window.location.href = \"http://localhost:5000/login\";\n//     }, 3000);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Email validation: Basic format check\n//     const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n//     setIsValidEmail(emailRegex.test(email));\n\n//     // Perform signup logic if both email and password are valid\n//     if (isValidEmail && isValidPassword) {\n//       try {\n//         // Send signup request to the API\n//         const response = await fetch(\"http://localhost:5000/singup\", {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({ name, email, password }),\n//         });\n\n//         if (response.ok) {\n//           // If signup is successful, store user details in local storage\n//           const userDetails = { name, email };\n//           const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n//           const updatedUsers = [...existingUsers, userDetails];\n//           localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n\n//           console.log(\"Signup successful!\");\n\n//           // Your code snippet for logging\n//           const argsWithFormat = [\"Signup successful!\", userDetails];\n//           Function.prototype.apply.call(console.log, console, argsWithFormat);\n\n//           // Redirect to the login page\n//           window.location.href = \"http://localhost:3000/login\";\n//         } else {\n//           console.error(\"Signup failed. Please try again.\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error during signup:\", error);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.title}>Signup</h2>\n//       <form onSubmit={handleSubmit} style={styles.form}>\n//         <label style={styles.label}>\n//           Name:\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={handleNameChange}\n//             style={styles.input}\n//           />\n//         </label>\n//         <br />\n//         <label style={styles.label}>\n//           Email:\n//           <input\n//             type=\"text\"\n//             value={email}\n//             onChange={handleEmailChange}\n//             style={styles.input}\n//           />\n//           {!isValidEmail && (\n//             <p style={styles.error}>Please enter a valid email address.</p>\n//           )}\n//         </label>\n//         <br />\n//         <label style={styles.label}>\n//           Password:\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//             style={styles.input}\n//           />\n//           {!isValidPassword && (\n//             <p style={styles.error}>\n//               Password must contain at least one letter and one number (6\n//               characters minimum).\n//             </p>\n//           )}\n//         </label>\n//         <br />\n//         <button type=\"submit\" style={styles.button}>\n//           Signup\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n// const Snackbar = ({ message }) => <div style={styles.snackbar}>{message}</div>;\n// const styles = {\n//   container: {\n//     maxWidth: \"400px\",\n//     margin: \"auto\",\n//     padding: \"20px\",\n//     border: \"1px solid #ccc\",\n//     borderRadius: \"8px\",\n//     marginTop: \"50px\",\n//   },\n//   title: {\n//     textAlign: \"center\",\n//     color: \"#333\",\n//   },\n//   form: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//   },\n//   label: {\n//     marginBottom: \"10px\",\n//   },\n//   input: {\n//     padding: \"8px\",\n//     marginBottom: \"10px\",\n//   },\n//   button: {\n//     padding: \"10px\",\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: \"4px\",\n//     cursor: \"pointer\",\n//   },\n//   error: {\n//     color: \"red\",\n//     fontSize: \"14px\",\n//   },\n// };","map":{"version":3,"names":[],"sources":["D:/Salesforce/Resistration/frontend/src/components/Usign.js"],"sourcesContent":["// /* eslint-disable import/no-anonymous-default-export */\r\n// import React, { useState } from \"react\";\r\n// //import { useHistory } from \"react-router-dom\";\r\n\r\n// export default () => {\r\n//   //const history = useHistory();\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [isValidEmail, setIsValidEmail] = useState(true);\r\n//   const [isValidPassword, setIsValidPassword] = useState(true);\r\n//   const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n\r\n//   const handleNameChange = (e) => setName(e.target.value);\r\n//   const handleEmailChange = (e) => setEmail(e.target.value);\r\n//   const handlePasswordChange = (e) => {\r\n//     const newPassword = e.target.value;\r\n//     setPassword(newPassword);\r\n\r\n//     // Password validation: At least one letter and one number\r\n//     const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\r\n//     setIsValidPassword(passwordRegex.test(newPassword));\r\n//   };\r\n//   const showSnackbar = (message) => {\r\n//     setSnackbarMessage(message);\r\n//     setTimeout(() => {\r\n//       setSnackbarMessage(\"\");\r\n//       // Redirect to the login page after 3 seconds\r\n//       window.location.href = \"http://localhost:5000/login\";\r\n//     }, 3000);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Email validation: Basic format check\r\n//     const emailRegex = /^\\S+@\\S+\\.\\S+$/;\r\n//     setIsValidEmail(emailRegex.test(email));\r\n\r\n//     // Perform signup logic if both email and password are valid\r\n//     if (isValidEmail && isValidPassword) {\r\n//       try {\r\n//         // Send signup request to the API\r\n//         const response = await fetch(\"http://localhost:5000/singup\", {\r\n//           method: \"POST\",\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//           body: JSON.stringify({ name, email, password }),\r\n//         });\r\n\r\n//         if (response.ok) {\r\n//           // If signup is successful, store user details in local storage\r\n//           const userDetails = { name, email };\r\n//           const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n//           const updatedUsers = [...existingUsers, userDetails];\r\n//           localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\r\n\r\n//           console.log(\"Signup successful!\");\r\n\r\n//           // Your code snippet for logging\r\n//           const argsWithFormat = [\"Signup successful!\", userDetails];\r\n//           Function.prototype.apply.call(console.log, console, argsWithFormat);\r\n\r\n//           // Redirect to the login page\r\n//           window.location.href = \"http://localhost:3000/login\";\r\n//         } else {\r\n//           console.error(\"Signup failed. Please try again.\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error during signup:\", error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.title}>Signup</h2>\r\n//       <form onSubmit={handleSubmit} style={styles.form}>\r\n//         <label style={styles.label}>\r\n//           Name:\r\n//           <input\r\n//             type=\"text\"\r\n//             value={name}\r\n//             onChange={handleNameChange}\r\n//             style={styles.input}\r\n//           />\r\n//         </label>\r\n//         <br />\r\n//         <label style={styles.label}>\r\n//           Email:\r\n//           <input\r\n//             type=\"text\"\r\n//             value={email}\r\n//             onChange={handleEmailChange}\r\n//             style={styles.input}\r\n//           />\r\n//           {!isValidEmail && (\r\n//             <p style={styles.error}>Please enter a valid email address.</p>\r\n//           )}\r\n//         </label>\r\n//         <br />\r\n//         <label style={styles.label}>\r\n//           Password:\r\n//           <input\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={handlePasswordChange}\r\n//             style={styles.input}\r\n//           />\r\n//           {!isValidPassword && (\r\n//             <p style={styles.error}>\r\n//               Password must contain at least one letter and one number (6\r\n//               characters minimum).\r\n//             </p>\r\n//           )}\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\" style={styles.button}>\r\n//           Signup\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n// const Snackbar = ({ message }) => <div style={styles.snackbar}>{message}</div>;\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: \"400px\",\r\n//     margin: \"auto\",\r\n//     padding: \"20px\",\r\n//     border: \"1px solid #ccc\",\r\n//     borderRadius: \"8px\",\r\n//     marginTop: \"50px\",\r\n//   },\r\n//   title: {\r\n//     textAlign: \"center\",\r\n//     color: \"#333\",\r\n//   },\r\n//   form: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//   },\r\n//   label: {\r\n//     marginBottom: \"10px\",\r\n//   },\r\n//   input: {\r\n//     padding: \"8px\",\r\n//     marginBottom: \"10px\",\r\n//   },\r\n//   button: {\r\n//     padding: \"10px\",\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     borderRadius: \"4px\",\r\n//     cursor: \"pointer\",\r\n//   },\r\n//   error: {\r\n//     color: \"red\",\r\n//     fontSize: \"14px\",\r\n//   },\r\n// };\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}