{"ast":null,"code":"var _jsxFileName = \"D:\\\\Salesforce\\\\Resistration\\\\frontend\\\\src\\\\components\\\\Usign.js\",\n  _s = $RefreshSig$();\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  //const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const handleNameChange = e => setName(e.target.value);\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    // Password validation: At least one letter and one number\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\n    setIsValidPassword(passwordRegex.test(newPassword));\n  };\n  const showSnackbar = message => {\n    setSnackbarMessage(message);\n    setTimeout(() => {\n      setSnackbarMessage(\"\");\n      // Redirect to the login page after 3 seconds\n      window.location.href = \"http://localhost:5000/login\";\n    }, 3000);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Email validation: Basic format check\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n    setIsValidEmail(emailRegex.test(email));\n\n    // Perform signup logic if both email and password are valid\n    if (isValidEmail && isValidPassword) {\n      try {\n        // Send signup request to the API\n        const response = await fetch(\"http://localhost:5000/singup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n        if (response.ok) {\n          // If signup is successful, store user details in local storage\n          const userDetails = {\n            name,\n            email\n          };\n          const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n          const updatedUsers = [...existingUsers, userDetails];\n          localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n          console.log(\"Signup successful!\");\n\n          // Your code snippet for logging\n          const argsWithFormat = [\"Signup successful!\", userDetails];\n          Function.prototype.apply.call(console.log, console, argsWithFormat);\n\n          // Redirect to the login page\n          window.location.href = \"http://localhost:3000/login\";\n        } else {\n          console.error(\"Signup failed. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Error during signup:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleNameChange,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: handleEmailChange,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), !isValidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.error,\n          children: \"Please enter a valid email address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), !isValidPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.error,\n          children: \"Password must contain at least one letter and one number (6 characters minimum).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}, \"Ym10qL6bmbalBTj4dRyDADJO74M=\");\nconst Snackbar = ({\n  message\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.snackbar,\n  children: message\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 126,\n  columnNumber: 35\n}, this);\n_c = Snackbar;\nconst styles = {\n  container: {\n    maxWidth: \"400px\",\n    margin: \"auto\",\n    padding: \"20px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    marginTop: \"50px\"\n  },\n  title: {\n    textAlign: \"center\",\n    color: \"#333\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  label: {\n    marginBottom: \"10px\"\n  },\n  input: {\n    padding: \"8px\",\n    marginBottom: \"10px\"\n  },\n  button: {\n    padding: \"10px\",\n    backgroundColor: \"#4CAF50\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\"\n  },\n  error: {\n    color: \"red\",\n    fontSize: \"14px\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Snackbar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","_s","name","setName","email","setEmail","password","setPassword","isValidEmail","setIsValidEmail","isValidPassword","setIsValidPassword","snackbarMessage","setSnackbarMessage","handleNameChange","e","target","value","handleEmailChange","handlePasswordChange","newPassword","passwordRegex","test","showSnackbar","message","setTimeout","window","location","href","handleSubmit","preventDefault","emailRegex","response","fetch","method","headers","body","JSON","stringify","ok","userDetails","existingUsers","parse","localStorage","getItem","updatedUsers","setItem","console","log","argsWithFormat","Function","prototype","apply","call","error","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","label","type","onChange","input","button","Snackbar","snackbar","_c","maxWidth","margin","padding","border","borderRadius","marginTop","textAlign","color","display","flexDirection","marginBottom","backgroundColor","cursor","fontSize","$RefreshReg$"],"sources":["D:/Salesforce/Resistration/frontend/src/components/Usign.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useState } from \"react\";\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  //const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isValidEmail, setIsValidEmail] = useState(true);\r\n  const [isValidPassword, setIsValidPassword] = useState(true);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n\r\n  const handleNameChange = (e) => setName(e.target.value);\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPassword(newPassword);\r\n\r\n    // Password validation: At least one letter and one number\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\r\n    setIsValidPassword(passwordRegex.test(newPassword));\r\n  };\r\n  const showSnackbar = (message) => {\r\n    setSnackbarMessage(message);\r\n    setTimeout(() => {\r\n      setSnackbarMessage(\"\");\r\n      // Redirect to the login page after 3 seconds\r\n      window.location.href = \"http://localhost:5000/login\";\r\n    }, 3000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Email validation: Basic format check\r\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\r\n    setIsValidEmail(emailRegex.test(email));\r\n\r\n    // Perform signup logic if both email and password are valid\r\n    if (isValidEmail && isValidPassword) {\r\n      try {\r\n        // Send signup request to the API\r\n        const response = await fetch(\"http://localhost:5000/singup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name, email, password }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          // If signup is successful, store user details in local storage\r\n          const userDetails = { name, email };\r\n          const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n          const updatedUsers = [...existingUsers, userDetails];\r\n          localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\r\n\r\n          console.log(\"Signup successful!\");\r\n\r\n          // Your code snippet for logging\r\n          const argsWithFormat = [\"Signup successful!\", userDetails];\r\n          Function.prototype.apply.call(console.log, console, argsWithFormat);\r\n\r\n          // Redirect to the login page\r\n          window.location.href = \"http://localhost:3000/login\";\r\n        } else {\r\n          console.error(\"Signup failed. Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error during signup:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>Signup</h2>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <label style={styles.label}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            style={styles.input}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label style={styles.label}>\r\n          Email:\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            style={styles.input}\r\n          />\r\n          {!isValidEmail && (\r\n            <p style={styles.error}>Please enter a valid email address.</p>\r\n          )}\r\n        </label>\r\n        <br />\r\n        <label style={styles.label}>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            style={styles.input}\r\n          />\r\n          {!isValidPassword && (\r\n            <p style={styles.error}>\r\n              Password must contain at least one letter and one number (6\r\n              characters minimum).\r\n            </p>\r\n          )}\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" style={styles.button}>\r\n          Signup\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst Snackbar = ({ message }) => <div style={styles.snackbar}>{message}</div>;\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"400px\",\r\n    margin: \"auto\",\r\n    padding: \"20px\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"8px\",\r\n    marginTop: \"50px\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    color: \"#333\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  label: {\r\n    marginBottom: \"10px\",\r\n  },\r\n  input: {\r\n    padding: \"8px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  button: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#4CAF50\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    fontSize: \"14px\",\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}