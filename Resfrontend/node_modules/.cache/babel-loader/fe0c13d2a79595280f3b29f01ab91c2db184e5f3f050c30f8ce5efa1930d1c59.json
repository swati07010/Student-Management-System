{"ast":null,"code":"var _jsxFileName = \"D:\\\\Salesforce\\\\Resistration\\\\frontend\\\\src\\\\components\\\\signUP.js\",\n  _s = $RefreshSig$();\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true);\n  const handleNameChange = e => setName(e.target.value);\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    // Password validation: At least one letter and one number\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\n    setIsValidPassword(passwordRegex.test(newPassword));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Email validation: Basic format check\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n    setIsValidEmail(emailRegex.test(email));\n\n    // Perform signup logic if both email and password are valid\n    if (isValidEmail && isValidPassword) {\n      try {\n        // Send signup request to the API\n        const response = await fetch(\"http://localhost:5000/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n        if (response.ok) {\n          // If signup is successful, store user details in local storage\n          const userDetails = {\n            name,\n            email\n          };\n          const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n          const updatedUsers = [...existingUsers, userDetails];\n          localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\n          console.log(\"Signup successful!\");\n\n          // Redirect to the login page\n          history.push(\"/login\");\n        } else {\n          console.error(\"Signup failed. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Error during signup:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), !isValidEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Please enter a valid email address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), !isValidPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Password must contain at least one letter and one number (6 characters minimum).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}, \"5gxGXNTLMAoZkGN9No1gl0HPLio=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","_s","history","name","setName","email","setEmail","password","setPassword","isValidEmail","setIsValidEmail","isValidPassword","setIsValidPassword","handleNameChange","e","target","value","handleEmailChange","handlePasswordChange","newPassword","passwordRegex","test","handleSubmit","preventDefault","emailRegex","response","fetch","method","headers","body","JSON","stringify","ok","userDetails","existingUsers","parse","localStorage","getItem","updatedUsers","setItem","console","log","push","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","style","color"],"sources":["D:/Salesforce/Resistration/frontend/src/components/signUP.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isValidEmail, setIsValidEmail] = useState(true);\r\n  const [isValidPassword, setIsValidPassword] = useState(true);\r\n\r\n  const handleNameChange = (e) => setName(e.target.value);\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPassword(newPassword);\r\n\r\n    // Password validation: At least one letter and one number\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\r\n    setIsValidPassword(passwordRegex.test(newPassword));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Email validation: Basic format check\r\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\r\n    setIsValidEmail(emailRegex.test(email));\r\n\r\n    // Perform signup logic if both email and password are valid\r\n    if (isValidEmail && isValidPassword) {\r\n      try {\r\n        // Send signup request to the API\r\n        const response = await fetch(\"http://localhost:5000/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ name, email, password }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          // If signup is successful, store user details in local storage\r\n          const userDetails = { name, email };\r\n          const existingUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n          const updatedUsers = [...existingUsers, userDetails];\r\n          localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\r\n\r\n          console.log(\"Signup successful!\");\r\n\r\n          // Redirect to the login page\r\n          history.push(\"/login\");\r\n        } else {\r\n          console.error(\"Signup failed. Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error during signup:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name:\r\n          <input type=\"text\" value={name} onChange={handleNameChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Email:\r\n          <input type=\"text\" value={email} onChange={handleEmailChange} />\r\n          {!isValidEmail && (\r\n            <p style={{ color: \"red\" }}>Please enter a valid email address.</p>\r\n          )}\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          {!isValidPassword && (\r\n            <p style={{ color: \"red\" }}>\r\n              Password must contain at least one letter and one number (6\r\n              characters minimum).\r\n            </p>\r\n          )}\r\n        </label>\r\n        <br />\r\n        {/* ... (additional form fields if any) */}\r\n        <button type=\"submit\">Signup</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAAC,EAAA,CAAe,MAAM;EAAAA,EAAA;EACnB,MAAMC,OAAO,GAAGJ,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMgB,gBAAgB,GAAIC,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACvD,MAAMC,iBAAiB,GAAIH,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzD,MAAME,oBAAoB,GAAIJ,CAAC,IAAK;IAClC,MAAMK,WAAW,GAAGL,CAAC,CAACC,MAAM,CAACC,KAAK;IAClCR,WAAW,CAACW,WAAW,CAAC;;IAExB;IACA,MAAMC,aAAa,GAAG,+BAA+B;IACrDR,kBAAkB,CAACQ,aAAa,CAACC,IAAI,CAACF,WAAW,CAAC,CAAC;EACrD,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOR,CAAC,IAAK;IAChCA,CAAC,CAACS,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,UAAU,GAAG,gBAAgB;IACnCd,eAAe,CAACc,UAAU,CAACH,IAAI,CAAChB,KAAK,CAAC,CAAC;;IAEvC;IACA,IAAII,YAAY,IAAIE,eAAe,EAAE;MACnC,IAAI;QACF;QACA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAE5B,IAAI;YAAEE,KAAK;YAAEE;UAAS,CAAC;QAChD,CAAC,CAAC;QAEF,IAAIkB,QAAQ,CAACO,EAAE,EAAE;UACf;UACA,MAAMC,WAAW,GAAG;YAAE9B,IAAI;YAAEE;UAAM,CAAC;UACnC,MAAM6B,aAAa,GAAGJ,IAAI,CAACK,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;UACrE,MAAMC,YAAY,GAAG,CAAC,GAAGJ,aAAa,EAAED,WAAW,CAAC;UACpDG,YAAY,CAACG,OAAO,CAAC,OAAO,EAAET,IAAI,CAACC,SAAS,CAACO,YAAY,CAAC,CAAC;UAE3DE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;UAEjC;UACAvC,OAAO,CAACwC,IAAI,CAAC,QAAQ,CAAC;QACxB,CAAC,MAAM;UACLF,OAAO,CAACG,KAAK,CAAC,kCAAkC,CAAC;QACnD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EAED,oBACE3C,OAAA;IAAA4C,QAAA,gBACE5C,OAAA;MAAA4C,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfhD,OAAA;MAAMiD,QAAQ,EAAE3B,YAAa;MAAAsB,QAAA,gBAC3B5C,OAAA;QAAA4C,QAAA,GAAO,OAEL,eAAA5C,OAAA;UAAOkD,IAAI,EAAC,MAAM;UAAClC,KAAK,EAAEb,IAAK;UAACgD,QAAQ,EAAEtC;QAAiB;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACRhD,OAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNhD,OAAA;QAAA4C,QAAA,GAAO,QAEL,eAAA5C,OAAA;UAAOkD,IAAI,EAAC,MAAM;UAAClC,KAAK,EAAEX,KAAM;UAAC8C,QAAQ,EAAElC;QAAkB;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/D,CAACvC,YAAY,iBACZT,OAAA;UAAGoD,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAT,QAAA,EAAC;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACnE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACRhD,OAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNhD,OAAA;QAAA4C,QAAA,GAAO,WAEL,eAAA5C,OAAA;UACEkD,IAAI,EAAC,UAAU;UACflC,KAAK,EAAET,QAAS;UAChB4C,QAAQ,EAAEjC;QAAqB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EACD,CAACrC,eAAe,iBACfX,OAAA;UAAGoD,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAT,QAAA,EAAC;QAG5B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACRhD,OAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENhD,OAAA;QAAQkD,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;EAAA,QA9FiBlD,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}